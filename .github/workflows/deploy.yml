name: Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Debug SSH Information
        run: |
          echo "🔍 Debugging SSH Connection"
          echo "Host: ${{ secrets.EC2_HOST }}"
          echo "Username: ${{ secrets.EC2_USERNAME }}"
          echo "SSH Key Check: ${{ secrets.EC2_SSH_KEY != '' && 'Present' || 'Missing' }}"
      
      - name: Setup SSH Directory
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ls -la ~/.ssh/deploy_key
          
      - name: Validate SSH Key Format
        run: |
          echo "📝 Validating SSH key format..."
          if ! grep -q "BEGIN RSA PRIVATE KEY" ~/.ssh/deploy_key; then
            echo "❌ SSH key is missing BEGIN header"
            exit 1
          fi
          if ! grep -q "END RSA PRIVATE KEY" ~/.ssh/deploy_key; then
            echo "❌ SSH key is missing END footer"
            exit 1
          fi
          echo "✅ SSH key format validation passed"
      
      - name: Test SSH Connection
        id: ssh_test
        continue-on-error: true
        run: |
          ssh -v -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} 'echo "SSH Connection Successful"'
      
      - name: Check SSH Connection Result
        if: steps.ssh_test.outcome == 'failure'
        run: |
          echo "❌ SSH Connection Failed"
          echo "Debug Information:"
          echo "Key Permissions:"
          ls -la ~/.ssh/deploy_key
          echo "Key Format:"
          ssh-keygen -l -f ~/.ssh/deploy_key || echo "Invalid key format"
          exit 1
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'
          
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          debug: true
          script: |
            set -e
            echo "🚀 Starting deployment..."
            
            # Verify directory exists
            if [ ! -d "/var/www/strapi-cms" ]; then
              echo "❌ Directory /var/www/strapi-cms does not exist"
              exit 1
            fi
            
            cd /var/www/strapi-cms
            echo "📂 Current directory: $(pwd)"
            
            # Pull latest changes
            echo "📦 Running git pull..."
            git pull origin main
            
            # Install dependencies
            echo "📥 Installing dependencies..."
            yarn install --frozen-lockfile
            
            # Build application
            echo "🏗️ Building application..."
            yarn build
            
            # Restart PM2
            echo "🔄 Restarting PM2..."
            if pm2 list | grep -q "strapi"; then
              pm2 restart strapi
            else
              pm2 start yarn --name "strapi" -- start
            fi
            
            echo "✅ Deployment complete!"